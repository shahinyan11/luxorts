// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RecoverPassword useContainer hook matches snapshot 1`] = `
Object {
  "formik": Object {
    "dirty": true,
    "handleSubmit": [MockFunction],
    "initialValues": Object {
      "message": Object {
        "description": Object {
          "id": "shared.yourPasswordHasBeenUpdated",
        },
      },
      "password": "",
      "redirectRoute": "/account-settings/login-and-security",
    },
    "isValid": true,
    "onSubmit": [Function],
    "resetForm": [MockFunction],
    "setFieldTouched": [MockFunction],
    "setFieldValue": [MockFunction],
    "setValues": [MockFunction],
    "validateForm": [MockFunction],
    "validateOnMount": true,
    "validationSchema": ObjectSchema {
      "_blacklist": ReferenceSet {
        "list": Set {},
        "refs": Map {},
      },
      "_blacklistError": undefined,
      "_excludedEdges": Array [],
      "_nodes": Array [
        "password",
      ],
      "_sortErrors": [Function],
      "_typeError": [Function],
      "_whitelist": ReferenceSet {
        "list": Set {},
        "refs": Map {},
      },
      "_whitelistError": undefined,
      "conditions": Array [],
      "deps": Array [],
      "exclusiveTests": Object {},
      "fields": Object {
        "password": StringSchema {
          "_blacklist": ReferenceSet {
            "list": Set {},
            "refs": Map {},
          },
          "_blacklistError": undefined,
          "_mutate": undefined,
          "_typeError": [Function],
          "_whitelist": ReferenceSet {
            "list": Set {},
            "refs": Map {},
          },
          "_whitelistError": undefined,
          "conditions": Array [],
          "deps": Array [],
          "exclusiveTests": Object {
            "max": true,
            "min": true,
            "required": true,
          },
          "spec": Object {
            "abortEarly": true,
            "nullable": false,
            "presence": "required",
            "recursive": true,
            "strict": false,
            "strip": false,
          },
          "tests": Array [
            [Function],
            [Function],
            [Function],
          ],
          "transforms": Array [
            [Function],
          ],
          "type": "string",
        },
      },
      "spec": Object {
        "abortEarly": true,
        "nullable": false,
        "presence": "optional",
        "recursive": true,
        "strict": false,
        "strip": false,
      },
      "tests": Array [],
      "transforms": Array [
        [Function],
      ],
      "type": "object",
    },
    "values": Object {},
  },
  "isLoading": false,
  "onCancel": [Function],
}
`;
