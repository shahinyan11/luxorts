// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Description component matches snapshot 1`] = `
<AddNewListingLayout
  formik={
    Object {
      "dirty": true,
      "handleSubmit": [MockFunction],
      "isValid": true,
      "resetForm": [MockFunction],
      "setFieldTouched": [MockFunction],
      "setFieldValue": [MockFunction],
      "setValues": [MockFunction],
      "validateForm": [MockFunction],
      "values": Object {},
    }
  }
  isDirty={false}
  isLoading={false}
  onNext={[MockFunction]}
  showSkeleton={false}
  stepStatus="initial"
  title={
    Object {
      "id": "shared.description",
    }
  }
>
  <div
    className="new-listing__container mb-8"
  >
    <h1
      className="new-listing__title mb-8"
    >
      <Memo(FormattedMessage)
        id="listing.describe.title"
      />
    </h1>
    <p
      className="new-listing__description mb-32"
    >
      <Memo(FormattedMessage)
        id="listing.describe.description"
      />
    </p>
    <ForwardRef(InternalForm)
      layout="vertical"
      size="large"
    >
      <ContextProvider
        value={
          Object {
            "dirty": true,
            "handleSubmit": [MockFunction],
            "isValid": true,
            "resetForm": [MockFunction],
            "setFieldTouched": [MockFunction],
            "setFieldValue": [MockFunction],
            "setValues": [MockFunction],
            "validateForm": [MockFunction],
            "values": Object {},
          }
        }
      >
        <InputField
          asComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "Group": [Function],
              "Password": Object {
                "$$typeof": Symbol(react.forward_ref),
                "defaultProps": Object {
                  "action": "click",
                  "iconRender": [Function],
                  "visibilityToggle": true,
                },
                "render": [Function],
              },
              "Search": Object {
                "$$typeof": Symbol(react.forward_ref),
                "render": [Function],
              },
              "TextArea": Object {
                "$$typeof": Symbol(react.forward_ref),
                "render": [Function],
              },
              "render": [Function],
            }
          }
          label={
            Object {
              "id": "shared.listingTitle",
            }
          }
          name="title"
          numbersOnly={false}
          withFormItem={true}
        />
        <InputField
          asComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "Group": [Function],
              "Password": Object {
                "$$typeof": Symbol(react.forward_ref),
                "defaultProps": Object {
                  "action": "click",
                  "iconRender": [Function],
                  "visibilityToggle": true,
                },
                "render": [Function],
              },
              "Search": Object {
                "$$typeof": Symbol(react.forward_ref),
                "render": [Function],
              },
              "TextArea": Object {
                "$$typeof": Symbol(react.forward_ref),
                "render": [Function],
              },
              "render": [Function],
            }
          }
          formItemClassName="mb-16"
          label={
            Object {
              "id": "shared.hiddenTitle",
            }
          }
          name="hiddenTitle"
          numbersOnly={false}
          tooltip={
            Object {
              "id": "listing.describe.info",
            }
          }
          withFormItem={true}
        />
        <InputField
          asComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "render": [Function],
            }
          }
          label={
            Object {
              "id": "shared.description",
            }
          }
          name="description"
          numbersOnly={false}
          withFormItem={true}
        />
      </ContextProvider>
    </ForwardRef(InternalForm)>
  </div>
</AddNewListingLayout>
`;
